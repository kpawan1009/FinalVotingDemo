import json
from web3 import Web3

ganache_url = "HTTP://127.0.0.1:7545"
web3 = Web3(Web3.HTTPProvider(ganache_url))

web3.eth.defaultAccount=web3.eth.accounts[0]
print(web3.isConnected())
abi=json.loads('[{"inputs":[{"internalType":"string","name":"uuid","type":"string"}],"name":"List","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"Manager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"uuid","type":"string"},{"internalType":"uint256","name":"p_no","type":"uint256"}],"name":"Vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"Winner","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"c_name","type":"string"},{"internalType":"uint256","name":"age","type":"uint256"},{"internalType":"uint256","name":"p_no","type":"uint256"}],"name":"addCandidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"v_name","type":"string"},{"internalType":"uint256","name":"age","type":"uint256"},{"internalType":"string","name":"pannumber","type":"string"},{"internalType":"string","name":"uuid","type":"string"}],"name":"addVoter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"arr","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"candidates","outputs":[{"internalType":"string","name":"c_name","type":"string"},{"internalType":"uint256","name":"age","type":"uint256"},{"internalType":"uint256","name":"p_no","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"manager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"voters","outputs":[{"internalType":"string","name":"v_name","type":"string"},{"internalType":"uint256","name":"age","type":"uint256"},{"internalType":"string","name":"pannumber","type":"string"},{"internalType":"string","name":"uuid","type":"string"},{"internalType":"uint256","name":"ticket","type":"uint256"},{"internalType":"bool","name":"voted","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"x","outputs":[],"stateMutability":"nonpayable","type":"function"}]')

bytecode=""

Manager = web3.eth.contract(abi=abi,bytecode=bytecode)
# address = web3.toChecksumAddress("0xA15893D5Fd4F8c9eE31BAe37738b98e3D33918E0")

# contract = web3.eth.contract(address=address, abi=abi)
# x = contract.functions.greet().call()
tx_hash=Manager.constructor().transact()
print(tx_hash)

tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)

contract=web3.eth.contract(
    address=tx_receipt.contractAddress,
    abi=abi
)

# print(contract.functions.greet().call())

# tx_hash=contract.functions.setGreeting("Heeeeeelllllllloooooooooo!!").transact()
# tx_hash=contract.functions.addCandidate("Vansh",33,1).transact()
# tx_hash=contract.functions.addCandidate("ansh",43,2).transact()
# tx_hash=contract.functions.addVoter("Vinayak",33).transact()
# tx_hash=contract.functions.addVoter("sak",53).transact()

# contract.functions.Vote("Vinayak",2).transact()
# contract.functions.Vote("sak",2).transact()
# print(contract.functions.Winner().call())

def vote(name,age,pan_no,uuid):
    tx_hash = contract.functions.addVoter(name,age,pan_no,uuid).transact()
    # tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
    print(contract.functions.List(uuid).call())
    print(uuid)
# tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
# print(contract.functions.greet().call())
def reset():
    contract.functions.x().transact()



def Voting1(uuid):
    tx_hash=contract.functions.Vote(uuid,1).transact()
    print(tx_hash)
    print("111111111")
    print("111111111")
    print("_______")
    print("_______")
    print("_______")
    print("_______")
    print("_******")
    print("_____*****")
    print("_____")
    print("_____")
    print("_____")

def Voting2(uuid):
    tx_hash=contract.functions.Vote(uuid,2).transact()
    print("22222222")
    print("22222222")
    print("_______")
    print("_______")
    print("_______")
    print("_______")
    print("_______")
    print("_____")
    print("_____")
    print("_____")
    print("_____")
    print("_____")
    print("_____")

def Voting3(uuid):
    tx_hash=contract.functions.Vote(uuid,3).transact()
    print("3333333")
    print("3333333")
    print("_______")
    print("_______")
    print("_______")
    print("_______")
    print("_______")
    print("_____")
    print("_____")
    print("_____")
    print("_____")
    print("_____")
    print("_____")

def abcd():
    print("_______")
    print("_______")
    print("_______")
    print("_______")
    print("_______")
    print("_______")
    print("_______")
    print("_____")
    print("_____")
    print("_____")
    # print(contract.functions.Winner().call())
    print("_____")
    print("_____")
    print("_____")

def winner():
    print("The Winner of Palghar is as follows")
    return contract.functions.Winner().call()

# reset()